/*! tracking.js | v2.0.1 | license Copyright (C) 2020 - 2022 Taichi Matsutaka */
!function(e){e.tracking=function(e,t){this.targetElements=Array.prototype.slice.call(document.querySelectorAll(e),0);const i={type:"hover",hoverSelector:null,objectiveSelector:null,direction:"vertical",currentClass:"is-current",mouseleaveCurrentPosition:!1,trackingStyle:!0,stalkerStyle:!0,stalkerClass:["js-tracking__stalker"],resize:!0};for(let e in t)i[e]=t[e];this.options=i,this.removes=[],this.base()},tracking.prototype={base:function(){const e=this,t=this.options,i=function(e,t,i){const s=e.clientWidth,l=e.clientHeight,n=t.getBoundingClientRect().top,o=t.getBoundingClientRect().left,r=e.getBoundingClientRect().top,c=e.getBoundingClientRect().left;i.style.width=s+"px",i.style.height=l+"px",i.style.top=r-n+"px",i.style.left=c-o+"px"};let s=null;s=1==t.mouseleaveCurrentPosition?function(e,t,s,l){l.classList.add("is-initial"),l.classList.remove("is-move"),i(e,s,l)}:function(e,t,i,s){s.classList.remove("is-move")},this.targetElements.forEach((function(l){const n=l.querySelectorAll(t.hoverSelector),o=document.createElement("span");for(var r=0;r<t.stalkerClass.length;r++)o.classList.add(t.stalkerClass[r]);o.classList.add("is-initial"),l.appendChild(o),!0===t.stalkerStyle&&(o.style.position="absolute",o.style.display="block"),!0===t.trackingStyle&&(l.style.position="relative");let c=l.querySelectorAll("."+t.currentClass)[0],a="";if(a=1==t.mouseleaveCurrentPosition?c:null==t.objectiveSelector?n[0]:l.querySelectorAll(t.objectiveSelector)[0],i(a,l,o),"hover"===t.type)for(let e=0;e<n.length;e++)n[e].addEventListener("mouseenter",(function(){let e=this;a=this.querySelector(t.objectiveSelector),o.classList.remove("is-initial"),o.classList.add("is-move"),a||(a=e),i(a,l,o)})),n[e].addEventListener("mouseleave",(function(){s(c,a,l,o)}));else if("click"===t.type)for(let e=0;e<n.length;e++)n[e].addEventListener("click",(function(){if(this.classList.contains(t.currentClass))s(c,a,l,o);else{let e=this;a=this.querySelector(t.objectiveSelector),o.classList.remove("is-initial"),o.classList.add("is-move"),a||(a=e),i(a,l,o)}}));if(!0===t.resize){const t=function(){s(c,a,l,o)};window.addEventListener("resize",t),e.removes.push((function(){window.removeEventListener("resize",t)}))}}))},remove:function(){const e=this.removes;if(e)for(let t=0;t<e.length;t++)e[t]()}}}(this);